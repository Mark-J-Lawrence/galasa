name: Main build

on:
  workflow_dispatch:
  push:
    branches: [main]

env:
  NAMESPACE: galasa-dev
  BRANCH: main

jobs:
  # delete-previous-packages:
  #   name: Delete previous versions
  #   runs-on: ubuntu-latest
  #   strategy:
  #       matrix: 
  #         name: [galasa-gradle-parent, githash.dev.galasa.githash.gradle.plugin,obr.dev.galasa.obr.gradle.plugin,tests.dev.galasa.tests.gradle.plugin,dev.galasa.gradle.impl,testcatalog.dev.galasa.testcatalog.gradle.plugin,dev.galasa.plugin.common,dev.galasa.plugin.common.impl,dev.galasa.plugin.common.test]

  #   steps:
  #     - name: Delete previous versions
  #       uses: actions/delete-package-versions@v5
  #       with:
  #         package-name: 'dev.galasa.${{matrix.name}}'
  #         package-type: 'maven'

  build-gradle:
    name: build and Test Gradle 
    # needs: delete-previous-packages
    # if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      
      - name: Setup JDK 
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'semeru'

      # The githash is added to the development Maven registry to show what commit level it contains
      - name: Print githash
        run: |
          echo $GITHUB_SHA > ./gradle.githash

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 6.9.2

      - name: Test and Build Gradle
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ORG_GRADLE_PROJECT_signingKeyId:  ${{ secrets.GPG_KEYID }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          gradle check publish --scan \
          -PsourceMaven=https://repo.maven.apache.org/maven2/ \
          -PcentralMaven=https://repo.maven.apache.org/maven2/ \
          -PtargetMaven=${{ github.workspace }}/repo \
          -PjacocoEnabled=true \
          -PisMainOrRelease=true
          
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Gradle Image
        id: metadata
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/gradle-maven-artefacts

      - name: Build Gradle image for development Maven registry
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: dockerfiles/dockerfile.gradle
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          # dockerRepository will change to ghcr.io once the Wrapping image is available there
          build-args: |
            dockerRepository=harbor.galasa.dev
            tag=${{ env.BRANCH }}
